name: Production Docker Build and Push

on:
  push:
    branches: [ main ]
    paths:
      - 'package.json'
      - 'server/package.json'
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      version_tag:
        description: '自定义版本标签 (可选，如: v1.2.3)'
        required: false
        type: string
      platforms:
        description: '构建平台'
        required: false
        default: 'linux/amd64,linux/arm64'
        type: choice
        options:
          - 'linux/amd64,linux/arm64'
          - 'linux/amd64'
          - 'linux/arm64'

env:
  REGISTRY: docker.io
  IMAGE_NAME: shanheee/easyssh

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract version from package.json
      id: version
      run: |
        if [ "${{ github.event.inputs.version_tag }}" != "" ]; then
          VERSION="${{ github.event.inputs.version_tag }}"
          echo "Using manual version: $VERSION"
        else
          VERSION="v$(node -p "require('./package.json').version")"
          echo "Using package.json version: $VERSION"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          network=host

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ steps.version.outputs.version }}

    - name: Build frontend
      run: |
        npm ci
        npm run build

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: ${{ github.event.inputs.platforms || 'linux/amd64,linux/arm64' }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          GIT_SHA=${{ github.sha }}
          GIT_REF=${{ github.ref_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Image digest
      run: echo ${{ steps.build.outputs.digest }}

    - name: Build summary
      run: |
        echo "🎉 Docker image built and pushed successfully!"
        echo "� Trigger: ${{ github.event_name }}"
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "👤 Manual trigger by: ${{ github.actor }}"
          echo "🏗️ Platforms: ${{ github.event.inputs.platforms || 'linux/amd64,linux/arm64' }}"
        fi
        echo "�📦 Version: ${{ steps.version.outputs.version }}"
        echo "🏷️ Tags: ${{ steps.meta.outputs.tags }}"
        echo "🔗 Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
