# EasySSH 环境变量配置模板
# 复制此文件为 .env.development 或 .env.production 并根据环境修改配置

# 服务端口配置
VITE_PORT=3000                # 前端开发服务器端口
SERVER_PORT=8000              # 后端服务器端口

# API配置
VITE_API_BASE_URL=/api        # API基础路径
VITE_API_TARGET=http://localhost:8000    # API代理目标

# 日志配置
VITE_LOG_LEVEL=info           # 可选值: debug, info, warn, error

# SQLite配置
SQLITE_PATH=./server/data/easyssh.sqlite

# 安全配置
# 强烈建议在生产环境中更改这些值
JWT_SECRET=your-jwt-secret-key-please-change-in-production
JWT_EXPIRES=86400             # 令牌有效期（秒）

# SSH会话配置
SSH_TIMEOUT=10000             # SSH连接超时时间（毫秒）
SSH_KEEP_ALIVE=30000          # SSH保活间隔（毫秒）

# 敏感数据加密密钥
# 请在生产环境中更改为长度足够的复杂密钥
ENCRYPTION_KEY=your-encryption-key-please-change-in-production

# 跨域设置
# 允许的客户端源（生产环境中应明确指定）
CORS_ORIGIN=*

# 资源限制
MAX_CONNECTIONS_PER_USER=10   # 每用户最大并发连接数
MAX_UPLOAD_SIZE=10485760      # 最大上传文件大小（字节）

# 性能调优
NODE_CACHE_TTL=3600           # 默认缓存TTL（秒）
NODE_CACHE_CHECK_PERIOD=600   # 缓存检查过期项目周期（秒）

# 前端缓存配置
VITE_CACHE_MEMORY_MAX_SIZE=100      # 内存缓存最大条目数
VITE_CACHE_MEMORY_TTL=1800000       # 缓存有效期（毫秒，默认30分钟）
VITE_CACHE_SUGGESTIONS_MAX_SIZE=50  # 建议缓存最大条目数
VITE_CACHE_SYNC_INTERVAL=300000     # 后台同步间隔（毫秒，默认5分钟）

# WebSocket配置
WS_PING_TIMEOUT=5000          # WebSocket ping超时（毫秒）

# Docker配置
DOCKER_REGISTRY=docker.io
DOCKER_USERNAME=shanheee
DOCKER_IMAGE_NAME=easyssh

# Token有效期（单位：秒）
TOKEN_EXPIRES_IN=172800       # 48小时

# 配置说明：
# 1. 生产环境请确保设置强密钥
# 2. 可以使用以下命令生成随机密钥:
#    node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# 3. 数据库：SQLite本地文件存储 + node-cache内存缓存
# 4. 确保data目录存在并有写入权限
# 5. SQLite数据库文件应妥善备份